//面向对象程序的基本特点
//抽象：对同一类对象的共同属性和行为进行概括，形成类
//  首先注意问题的本质及描述，其次是实现过程和细节。
//  数据抽象：描述某类对象的属性或者状态（对象相互区别的物理量）
//  代码抽象：描述某类对象的共有的行为特征或者具有的功能。
//  抽象的实现：类

//封装：    将抽象出的数据成员，代码成员相结合，将它们视为一个整体
//目的：    增强安全性和简化编程，使用者不必了解具体的实现细节，
//  而只需要通过外部接口，以特定的访问权限，来使用类的成员。
//实现封装： 类声明中的{}   

class Clock{
    public: void setTime(int newH,int newM,int newS);
            void showTime();    //setTime与showTime为外部接口
    private:int hour,minute,second;
};//public与private为特定的访问权限


